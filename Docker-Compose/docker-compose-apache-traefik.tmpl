services:
  apache:
    image: ${APACHE_IMAGE_SHA}
    container_name: apache-container # Define container name
    ports:
      - :80
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.services.apache.loadbalancer.server.port=80"
      # HTTPS Router
      - "traefik.http.routers.apache.entrypoints=websecure"
      - "traefik.http.routers.apache.tls=true"
      - "traefik.http.routers.apache.rule=Host(`apache.jklug.work`)"
      # HTTP Router
      - "traefik.http.routers.apache-http.rule=Host(`apache.jklug.work`)"
      - "traefik.http.routers.apache-http.entrypoints=web"
      - "traefik.http.routers.apache-http.middlewares=redirect-to-https"
      # Middleware for HTTP to HTTPS redirection
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    networks:
      - traefik

  reverse-proxy:
    image: ${TRAEFIK_IMAGE_SHA}
    container_name: traefik-reverse-proxy # Define container name
    restart: unless-stopped
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.file.directory=/etc/traefik/dynamic
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
    ports:
      - "80:80"
      - "443:443"
      #- "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik

networks:
  traefik:
    external: true